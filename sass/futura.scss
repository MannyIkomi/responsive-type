@import 'index';

$futura: 'futura-pt', Arial, Helvetica, sans-serif;
$touchTarget: 3rem;

@mixin futuraText {
  font-family: $futura;
  font-size: 1.2rem;
  line-height: 1.4;
}

// .fitty {
//   @include optimizeFitty();
// }

button {
  width: 100%;
  height: auto;
  display: block;
  border: 0;
  background-color: transparent;
  padding: 0;
  margin: 0;
  cursor: pointer;
}

.playing {
  animation-play-state: running;
  // enables select of nodelist
}
.paused {
  animation-play-state: paused;
}
// .switch {
// used to track toggle colors
// }

.transition {
  transition-property: fill;
  transition-timing-function: ease-in-out;
  transition-duration: 1s;
}

#futura {
  font-family: $futura;

  width: 100%;
  max-width: 80rem;

  background-color: $muteGray;

  padding: 1rem;
  overflow: hidden;

  p,
  ul,
  li,
  ol,
  span {
    color: $darkGray;
    @include maxLineMeasure();
    @include futuraText();
    font-variant-numeric: proportional-nums ordinal;
  }

  h1,
  h2,
  h3,
  h4 {
    color: $darkGray;
    @include futuraText();
    line-height: 1;
  }

  .futura-title h1 {
    font-size: 25vmin;
    line-height: 0.8;
  }
  .futura-subtitle h2 {
    font-size: 2rem;
  }

  .control {
    min-width: $touchTarget;
    min-height: $touchTarget;
    width: 100%;
    // height: auto;
    max-width: $touchTarget * 2;

    margin: $touchTarget / 2;
    svg {
      fill: $medGray;
    }

    // switches control color above
    &.toggle-color {
      svg {
        fill: rgb(232, 15, 15);
      }
    }
  }
  .shapes {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .specimens {
    color: $medGray;
  }

  @keyframes rotateTime {
    from {
      transform: rotate(0);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @mixin clockAnimation($duration) {
    transform-box: fill-box;
    transform-origin: center center;
    animation-name: rotateTime;
    animation-duration: $duration;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  }

  #clock {
    padding: 1rem;
    position: relative;

    #year,
    #pairs {
      background-color: none;
      pointer-events: none; // prevents blocking button interactions
      position: absolute;
      z-index: 2;

      // centers and fills container for animation centering
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      height: 100%;

      div {
        // positioning container to get text outside of clock
        position: relative;
        width: 100%;

        span {
          position: relative;
          color: $medGray;
          font-size: 2rem;
        }
      }
    }

    #year {
      //offset initial position to align with hour hand
      transform: rotate(-45deg);
      div {
        text-align: right;
        @include clockAnimation(60s);
      }
      span {
        right: -20%;
        max-width: initial;
      }
    }
    #pairs {
      //offset initial position to align with hour hand
      transform: rotate(360deg);
      div {
        position: relative;
        text-align: center; // centers span with text
        @include clockAnimation(5s);
        height: 100%;
      }
      span {
        top: -40%;
        line-height: 0.25;
      }
    }

    .clock-parts {
      // stack SVG's ontop of each other
      position: absolute;
      top: 0;
      right: 0;
      width: 100%;
      height: auto;
    }

    #hour-hand {
      // scaled 60seconds/hour
      @include clockAnimation(60s);
    }
    #minute-hand {
      // scaled (divide hour by 12)
      @include clockAnimation(5s);
    }

    svg {
      // futura animated clock
      :not([fill*='none']) {
        fill: $darkGray;
      }
    }
    &.toggle-color {
      svg {
        :not([fill*='none']) {
          fill: $medGray;
        }
      }
    }
    // end clock
  }

  #xyz,
  #aa {
    // remove extra ornaments from mobile view
    display: none;
  }
}

@media screen and (min-width: $optimalView) {
  #futura {
    .futura-grid {
      max-width: 100vw;
      display: grid;
      grid-auto-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
      grid-auto-flow: column;
    }

    .futura-title {
      justify-self: bottom;
      grid-column: 2 / 5;
      grid-row: 2 / 3;
    }
    .futura-subtitle {
      h2 {
        font-size: 4vmin;
      }
      grid-column: 4 / 6;
      grid-row: 1 / 2;
      margin: 1rem 0;
    }
    .futura-text {
      grid-column: 3 / 5;
      grid-row: 3 / 4;
    }

    .shapes {
      align-self: center;
      grid-column: 4 / 6;
      grid-row: 4 / 5;
      .control {
        margin: $touchTarget;
      }
    }

    #clock {
      // aligns clock with "futura" and "XYZ" ornaments
      width: 130%;
      justify-self: end;
      grid-column: 1 / 4;
      grid-row: 4 / 6;
    }

    #xyz {
      display: initial;
      grid-column: 2 / 3;
      grid-row: 3 / 4;

      font-size: 5vmin;
      text-align: center;

      justify-self: left;
      align-self: center;
    }

    #aa {
      display: initial;

      grid-column: 5;
      grid-row: 5 / 6;

      justify-self: end;
      align-self: end;

      font-size: 5vmin;
      line-height: 1;
    }
  }
}
